import {Card, CardTag} from "../apps/shared/classes/card.class";
import {Currencies} from "../apps/shared/classes/currencies.class";
import {Progression} from "../apps/shared/interfaces/card-factory.interface";

export const CARDS: Card[] = [
    new Card(
        "Getting Started",
        "",
        0,
        "start",
        "Welcome! You can start Kurkudos with this task. Record an 1km activity and take a selfie with a thumbs up",
        Currencies.withPoints(1).withExperience(5),
        1,
        0,
        {progression: 0,usesToProgress: 0,},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "1000",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,walk,ride",
            property: "type",
        }],
        false,
        [CardTag.wanderer]
    ),
    new Card(
        "Forrest Gump",
        "",
        0,
        "forest",
        "Do an activity in a forest",
        Currencies.withPoints(1).withExperience(2),
        1,
        0,
        {progression: 0,usesToProgress: 0,},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,walk,ride",
            property: "type",
        }],
        false,
        [CardTag.wanderer]
    ),
    new Card(
        "Checkpoint A-E",
        "",
        0,
        "checkpoint_ae",
        "Do an activity in a city starting with any of the letters from A to G. Take a selfie at city's iconic sight",
        Currencies.withPoints(1).withExperience(2),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,walk,ride",
            property: "type",
        }],
        false,
        [CardTag.wanderer]
    ),
    new Card(
        "Checkpoint F-J",
        "",
        0,
        "checkpoint_fj",
        "Do an activity in a city starting with any of the letters from F to J. Take a selfie at city's iconic sight",
        Currencies.withPoints(1).withExperience(2),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,walk,ride",
            property: "type",
        }],
        false,
        [CardTag.wanderer]
    ),
    new Card(
        "Checkpoint K-O",
        "",
        0,
        "checkpoint_ko",
        "Do an activity in a city starting with any of the letters from K to O. Take a selfie at city's iconic sight",
        Currencies.withPoints(1).withExperience(2),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,walk,ride",
            property: "type",
        }],
        false,
        [CardTag.wanderer]
    ),
    new Card(
        "Checkpoint P-T",
        "",
        0,
        "checkpoint_pt",
        "Do an activity in a city starting with any of the letters from P to T. Take a selfie at city's iconic sight",
        Currencies.withPoints(1).withExperience(3),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,walk,ride",
            property: "type",
        }],
        false,
        [CardTag.wanderer]
    ),
    new Card(
        "Checkpoint U-Z",
        "",
        0,
        "checkpoint_uz",
        "Do an activity in a city starting with any of the letters from U to Z. Take a selfie at city's iconic sight",
        Currencies.withPoints(1).withExperience(3),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,walk,ride",
            property: "type",
        }],
        false,
        [CardTag.wanderer]
    ),
    new Card(
        "Other Coast",
        "",
        0,
        "other_coast",
        "Do an activity going along the river. Do half of the distance on one side and the other half on the other side",
        Currencies.withPoints(1).withExperience(2),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,walk,ride",
            property: "type",
        }],
        false,
        [CardTag.wanderer]
    ),
    new Card(
        "Baywatch",
        "",
        0,
        "baywatch",
        "Do an activity along the seashore",
        Currencies.withPoints(1).withExperience(2),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,walk,ride",
            property: "type",
        }],
        false,
        [CardTag.wanderer]
    ),
    new Card(
        "Back to Work",
        "",
        0,
        "work",
        "Do an activity going to the location of your workplace (present or previous one)",
        Currencies.withPoints(1).withExperience(2),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,walk,ride",
            property: "type",
        }],
        false,
        [CardTag.wanderer]
    ),
    new Card(
        "Parkway Drive",
        "",
        0,
        "park",
        "Do an activity in a park",
        Currencies.withPoints(1).withExperience(1),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,walk,ride",
            property: "type",
        }],
        false,
        [CardTag.wanderer]
    ),
    new Card(
        "Sunset Sarsaparilla",
        "",
        0,
        "sunset",
        "Do an activity during a sunset",
        Currencies.withPoints(1).withExperience(2),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,walk,ride",
            property: "type",
        }],
        false,
        [CardTag.wanderer]
    ),
    new Card(
        "Pondkeeper",
        "",
        0,
        "pond",
        "Do an activity doing at least 3 loops around a pond",
        Currencies.withPoints(1).withExperience(2),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,walk,ride",
            property: "type",
        }],
        false,
        [CardTag.wanderer]
    ),
    new Card(
        "Long Island",
        "",
        0,
        "island",
        "Do an activity on an island",
        Currencies.withPoints(1).withExperience(2),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,walk,ride",
            property: "type",
        }],
        false,
        [CardTag.wanderer]
    ),
    new Card(
        "Tequila Sunrise",
        "",
        0,
        "sunrise",
        "Do an activity during a sunrise",
        Currencies.withPoints(1).withExperience(4),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,walk,ride",
            property: "type",
        }],
        false,
        [CardTag.wanderer]
    ),
    new Card(
        "Get Shrek\'d",
        "",
        0,
        "swamp",
        "Do an activity in a swamp (any kind of wetland)",
        Currencies.withPoints(1).withExperience(3),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,walk,ride",
            property: "type",
        }],
        false,
        [CardTag.wanderer]
    ),
    new Card(
        "So Interesting",
        "",
        0,
        "so_interesting",
        "Do an activity in a small loop. Do at least 30 identical loops. You CAN alternate direction",
        Currencies.withPoints(1).withExperience(4),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,walk,ride",
            property: "type",
        }],
        false,
        [CardTag.wanderer]
    ),
    new Card(
        "TRAINing Season",
        "",
        0,
        "train",
        "Either start or finish your activity right after/before you took a train ride",
        Currencies.withPoints(1).withExperience(3),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,walk,ride",
            property: "type",
        }],
        false,
        [CardTag.wanderer]
    ),
    new Card(
        "King of the Hill",
        "",
        0,
        "hill",
        "Climb the highest hill in your city at least 5 times",
        Currencies.withPoints(1).withExperience(3),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,walk,ride",
            property: "type",
        }],
        false,
        [CardTag.wanderer]
    ),
    new Card(
        "Raining Man",
        "",
        0,
        "rain",
        "Do an activity in the rain",
        Currencies.withPoints(1).withExperience(2),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,walk,ride",
            property: "type",
        }],
        false,
        [CardTag.wanderer]
    ),
    new Card(
        "One Direction",
        "",
        0,
        "one_direction",
        "Do an activity travelling in a line as straight as possible",
        Currencies.withPoints(1).withExperience(3),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance * 1.5",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,walk,ride",
            property: "type",
        }],
        false,
        [CardTag.wanderer]
    ),
    new Card(
        "Night Rider",
        "",
        0,
        "night",
        "Do an activity during the night hours (after 12pm)",
        Currencies.withPoints(1).withExperience(2),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,walk,ride",
            property: "type",
        }],
        false,
        [CardTag.wanderer]
    ),
    new Card(
        "King in the Castle",
        "",
        0,
        "castle",
        "Do an activity visiting a medieval castle (or ruins of a medieval castle)",
        Currencies.withPoints(1).withExperience(3),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,walk,ride",
            property: "type",
        }],
        false,
        [CardTag.wanderer]
    ),
    new Card(
        "Fish Patrol",
        "",
        0,
        "fish",
        "Do an activity doing a full loop around a lake",
        Currencies.withPoints(1).withExperience(3),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,walk,ride",
            property: "type",
        }],
        false,
        [CardTag.wanderer]
    ),




    new Card(
        "Jack Sparrow",
        "",
        0,
        "sparrow",
        "Take a clear photo of a sparrow during your activity",
        Currencies.withPoints(1).withExperience(2),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,walk,ride",
            property: "type",
        }],
        false,
        [CardTag.photohunter]
    ),
    new Card(
        "Back in Black",
        "",
        0,
        "blackbird",
        "Take a clear photo of a common blackbird or a starling during your activity",
        Currencies.withPoints(1).withExperience(2),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,walk,ride",
            property: "type",
        }],
        false,
        [CardTag.photohunter]
    ),
    new Card(
        "Seagull",
        "",
        0,
        "seagull",
        "Take a clear photo of a seagull during your activity",
        Currencies.withPoints(1).withExperience(2),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,walk,ride",
            property: "type",
        }],
        false,
        [CardTag.photohunter]
    ),
    new Card(
        "Sonic the Hedgehog",
        "",
        0,
        "hedgehog",
        "Take a clear photo of a hedgehog during your activity",
        Currencies.withPoints(1).withExperience(3),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,walk,ride",
            property: "type",
        }],
        false,
        [CardTag.photohunter]
    ),
    new Card(
        "Russel Crow",
        "",
        0,
        "crow",
        "Take a clear photo of a crow (raven) during your activity",
        Currencies.withPoints(1).withExperience(2),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,walk,ride",
            property: "type",
        }],
        false,
        [CardTag.photohunter]
    ),
    new Card(
        "Great tit!",
        "",
        0,
        "tit",
        "Take a clear photo of a great tit (bird) or any other subtype",
        Currencies.withPoints(1).withExperience(3),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,walk,ride",
            property: "type",
        }],
        false,
        [CardTag.photohunter]
    ),
    new Card(
        "Mr National Bird",
        "",
        0,
        "wagtail",
        "Take a clear photo of a wagtail during your activity",
        Currencies.withPoints(1).withExperience(3),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,walk,ride",
            property: "type",
        }],
        false,
        [CardTag.photohunter]
    ),
    new Card(
        "Stork",
        "",
        0,
        "stork",
        "Take a clear photo of a stork during your activity",
        Currencies.withPoints(1).withExperience(3),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,walk,ride",
            property: "type",
        }],
        false,
        [CardTag.photohunter]
    ),
    new Card(
        "Magpie",
        "",
        0,
        "magpie",
        "Take a clear photo of a magpie during your activity",
        Currencies.withPoints(1).withExperience(4),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,walk,ride",
            property: "type",
        }],
        false,
        [CardTag.photohunter]
    ),
    new Card(
        "Bugs Bunny",
        "",
        0,
        "hare",
        "Take a clear photo of a hare in the wild during your activity",
        Currencies.withPoints(1).withExperience(4),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,walk,ride",
            property: "type",
        }],
        false,
        [CardTag.photohunter]
    ),
    new Card(
        "Duck Tales",
        "",
        0,
        "duck",
        "Take a clear photo of a duck during your activity",
        Currencies.withPoints(1).withExperience(1),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,walk,ride",
            property: "type",
        }],
        false,
        [CardTag.photohunter]
    ),
    new Card(
        "Happy Tree Friends",
        "",
        0,
        "tree_friends",
        "Take a clear photo of a fox, deer or a beaver in the wild during your activity",
        Currencies.withPoints(1).withExperience(5),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,walk,ride",
            property: "type",
        }],
        false,
        [CardTag.photohunter]
    ),
    new Card(
        "Cowboy",
        "",
        0,
        "cowboy",
        "Take a clear photo of a horse or a cow during your activity",
        Currencies.withPoints(1).withExperience(3),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,walk,ride",
            property: "type",
        }],
        false,
        [CardTag.photohunter]
    ),
    new Card(
        "Swan Lake",
        "",
        0,
        "swan",
        "Take a clear photo of a swan during your activity",
        Currencies.withPoints(1).withExperience(2),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,walk,ride",
            property: "type",
        }],
        false,
        [CardTag.photohunter]
    ),
    new Card(
        "Bandit Gull",
        "",
        0,
        "black_headed_gull",
        "Take a clear photo of a black headed gull during your activity",
        Currencies.withPoints(1).withExperience(3),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,walk,ride",
            property: "type",
        }],
        false,
        [CardTag.photohunter]
    ),
    new Card(
        "Squirrel",
        "",
        0,
        "squirrel",
        "Take a clear photo of a squirrel in the wild during your activity",
        Currencies.withPoints(1).withExperience(4),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,walk,ride",
            property: "type",
        }],
        false,
        [CardTag.photohunter]
    ),
    new Card(
        "Swallow",
        "",
        0,
        "swallow",
        "Take a clear photo of a swallow during your activity",
        Currencies.withPoints(1).withExperience(3),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,walk,ride",
            property: "type",
        }],
        false,
        [CardTag.photohunter]
    ),
    new Card(
        "Pigeon",
        "",
        0,
        "pigeon",
        "Take a clear photo of a pigeon during your activity",
        Currencies.withPoints(1).withExperience(1),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,walk,ride",
            property: "type",
        }],
        false,
        [CardTag.photohunter]
    ),
    new Card(
        "Woody Woodpecker",
        "",
        0,
        "woodpecker",
        "Take a clear photo of a woodpecker during your activity",
        Currencies.withPoints(1).withExperience(4),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,walk,ride",
            property: "type",
        }],
        false,
        [CardTag.photohunter]
    ),
    new Card(
        "G.O.A.T.",
        "",
        0,
        "goat",
        "Take a clear photo of a goat or a sheep during your activity",
        Currencies.withPoints(1).withExperience(3),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,walk,ride",
            property: "type",
        }],
        false,
        [CardTag.photohunter]
    ),
    new Card(
        "Mother of Dragons",
        "",
        0,
        "snake",
        "Take a clear photo of a lizard or a snake in a wild during your activity",
        Currencies.withPoints(1).withExperience(3),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,walk,ride",
            property: "type",
        }],
        false,
        [CardTag.photohunter]
    ),
    new Card(
        "Splinter",
        "",
        0,
        "mouse",
        "Take a clear photo of a mouse or a rat in a wild during your activity",
        Currencies.withPoints(1).withExperience(3),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,walk,ride",
            property: "type",
        }],
        false,
        [CardTag.photohunter]
    ),
    new Card(
        "Long bois",
        "",
        0,
        "ferret",
        "Take a clear photo of a weasel, otter or a ferret in a wild during your activity",
        Currencies.withPoints(1).withExperience(5),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,walk,ride",
            property: "type",
        }],
        false,
        [CardTag.photohunter]
    ),
    new Card(
        "Full House",
        "",
        0,
        "full_house",
        "Take a clear photo of a 3 different kind of birds in a single shot during your activity",
        Currencies.withPoints(1).withExperience(3),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,walk,ride",
            property: "type",
        }],
        false,
        [CardTag.photohunter]
    ),
    new Card(
        "Ornithologist 1",
        "",
        0,
        "ornithologist_1",
        "Take a clear photo of any kind of bird (in the wild) that wasn't mentioned in any of the previous tasks during your activity",
        Currencies.withPoints(1).withExperience(4),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,walk,ride",
            property: "type",
        }],
        false,
        [CardTag.photohunter]
    ),
    new Card(
        "Ornithologist 2",
        "",
        0,
        "ornithologist_2",
        "Take a clear photo of any kind of bird (in the wild) that wasn't mentioned in any of the previous tasks during your activity",
        Currencies.withPoints(1).withExperience(3),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,walk,ride",
            property: "type",
        }],
        false,
        [CardTag.photohunter]
    ),
    new Card(
        "Born to be Wild",
        "",
        0,
        "wild",
        "Take a clear photo of any kind of wild animal that wasn't mentioned in any of the previous tasks during your activity",
        Currencies.withPoints(1).withExperience(5),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,walk,ride",
            property: "type",
        }],
        false,
        [CardTag.photohunter]
    ),



    new Card(
        "Cardio",
        "",
        0,
        "cardio",
        "Do any kind of cardio workout (besides running, walking or riding a bike)",
        Currencies.withPoints(1).withExperience(2),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "1800",
            property: "elapsed_time",
        }, {
            comparator: "in",
            formula: "other",
            property: "type",
        }],
        false,
        [CardTag.multitasker]
    ),
    new Card(
        "Game On",
        "",
        0,
        "game",
        "Take part in any kind of active sports game",
        Currencies.withPoints(1).withExperience(2),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "1800",
            property: "elapsed_time",
        }, {
            comparator: "in",
            formula: "other",
            property: "type",
        }],
        false,
        [CardTag.multitasker]
    ),
    new Card(
        "Free weights",
        "",
        0,
        "free_weights",
        "Do any kind of workout with free weights (dumbbells, kettlebells, barbells)",
        Currencies.withPoints(1).withExperience(2),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "1800",
            property: "elapsed_time",
        }, {
            comparator: "in",
            formula: "other",
            property: "type",
        }],
        false,
        [CardTag.multitasker]
    ),
    new Card(
        "Keep on Rolling",
        "",
        0,
        "rolling",
        "Ride on anything non-motorized. (except bicycle)",
        Currencies.withPoints(1).withExperience(2),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "1800",
            property: "elapsed_time",
        }, {
            comparator: "in",
            formula: "other",
            property: "type",
        }],
        false,
        [CardTag.multitasker]
    ),
    new Card(
        "Rackets (indoor)",
        "",
        0,
        "rackets_indoor",
        "Play any kind of racket sport (table tennis, squash, etc.) indoors",
        Currencies.withPoints(1).withExperience(3),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "1800",
            property: "elapsed_time",
        }, {
            comparator: "in",
            formula: "other",
            property: "type",
        }],
        false,
        [CardTag.multitasker]
    ),
    new Card(
        "Rackets (outdoor)",
        "",
        0,
        "rackets_outdoor",
        "Play any kind of racket sport (tennis, badminton, etc.) outdoors",
        Currencies.withPoints(1).withExperience(3),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "1800",
            property: "elapsed_time",
        }, {
            comparator: "in",
            formula: "other",
            property: "type",
        }],
        false,
        [CardTag.multitasker]
    ),
    new Card(
        "Mister Fantastic",
        "",
        0,
        "yoga",
        "Do a yoga/stretching/pilates workout",
        Currencies.withPoints(1).withExperience(1),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "1800",
            property: "elapsed_time",
        }, {
            comparator: "in",
            formula: "other",
            property: "type",
        }],
        false,
        [CardTag.multitasker]
    ),
    new Card(
        "Tony Hawk",
        "",
        0,
        "ground_board",
        "Do an activity on a skateboard, longboard or similar",
        Currencies.withPoints(1).withExperience(2),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "1800",
            property: "elapsed_time",
        }, {
            comparator: "in",
            formula: "other",
            property: "type",
        }],
        false,
        [CardTag.multitasker]
    ),
    new Card(
        "Climber",
        "",
        0,
        "climber",
        "Do a bouldering or climbing activity",
        Currencies.withPoints(1).withExperience(4),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "1800",
            property: "elapsed_time",
        }, {
            comparator: "in",
            formula: "other",
            property: "type",
        }],
        false,
        [CardTag.multitasker]
    ),
    new Card(
        "Competitor",
        "",
        0,
        "competitor",
        "Participate in any official competition/race during your activity",
        Currencies.withPoints(1).withExperience(5),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "1200",
            property: "elapsed_time",
        }],
        false,
        [CardTag.multitasker]
    ),
    new Card(
        "Bodyweight",
        "",
        0,
        "bodyweight",
        "Do any kind of bodyweight workout (calisthenics, etc.)",
        Currencies.withPoints(1).withExperience(2),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "1800",
            property: "elapsed_time",
        }, {
            comparator: "in",
            formula: "other",
            property: "type",
        }],
        false,
        [CardTag.multitasker]
    ),
    new Card(
        "Motor Racing",
        "",
        0,
        "motor",
        "Do an activity on karting, quad/cross bike on a specialized track",
        Currencies.withPoints(1).withExperience(4),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "600",
            property: "elapsed_time",
        }, {
            comparator: "in",
            formula: "other",
            property: "type",
        }],
        false,
        [CardTag.multitasker]
    ),
    new Card(
        "Rowing",
        "",
        0,
        "rowing",
        "Do any kind of activity, that involves rowing. Kayaking, SUP, rowing machine etc.",
        Currencies.withPoints(1).withExperience(3),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "1800",
            property: "elapsed_time",
        }, {
            comparator: "in",
            formula: "other",
            property: "type",
        }],
        false,
        [CardTag.multitasker]
    ),
    new Card(
        "Aquaman",
        "",
        0,
        "aquaman",
        "Do a swimming activity, either in a pool or in an open water",
        Currencies.withPoints(1).withExperience(3),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "1800",
            property: "elapsed_time",
        }, {
            comparator: "in",
            formula: "other",
            property: "type",
        }],
        false,
        [CardTag.multitasker]
    ),
    new Card(
        "Team Game",
        "",
        0,
        "team_game",
        "Participate in any kind of active team sports game",
        Currencies.withPoints(1).withExperience(4),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "1800",
            property: "elapsed_time",
        }, {
            comparator: "in",
            formula: "other",
            property: "type",
        }],
        false,
        [CardTag.multitasker]
    ),
    new Card(
        "Group Workout",
        "",
        0,
        "group_workout",
        "Do any kind of group workout with at least 3 other people",
        Currencies.withPoints(1).withExperience(3),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "1800",
            property: "elapsed_time",
        }, {
            comparator: "in",
            formula: "other",
            property: "type",
        }],
        false,
        [CardTag.multitasker]
    ),
    new Card(
        "Water Boards",
        "",
        0,
        "water_boards",
        "Do an activity on a wakeboard, kiteboard, surfboard, SUP or similar",
        Currencies.withPoints(1).withExperience(3),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "1200",
            property: "elapsed_time",
        }, {
            comparator: "in",
            formula: "other",
            property: "type",
        }],
        false,
        [CardTag.multitasker]
    ),
    new Card(
        "Step Up",
        "",
        0,
        "dance",
        "Do any kind of active dancing activity, zumba or actual dance",
        Currencies.withPoints(1).withExperience(3),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "1800",
            property: "elapsed_time",
        }, {
            comparator: "in",
            formula: "other",
            property: "type",
        }],
        false,
        [CardTag.multitasker]
    ),
    new Card(
        "Hike",
        "",
        0,
        "hike",
        "Go for a hike outside of a city",
        Currencies.withPoints(1).withExperience(3),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance * 1.5",
            property: "distance",
        }, {
            comparator: "in",
            formula: "walk",
            property: "type",
        }],
        false,
        [CardTag.multitasker]
    ),
    new Card(
        "Indoor Bike",
        "",
        0,
        "indoor_bike",
        "Do an indoor cycling workout",
        Currencies.withPoints(1).withExperience(2),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "1800",
            property: "elapsed_time",
        }, {
            comparator: "in",
            formula: "other",
            property: "type",
        }],
        false,
        [CardTag.multitasker]
    ),
    new Card(
        "Martial Arts",
        "",
        0,
        "martial_arts",
        "Do any kind of martial arts activity",
        Currencies.withPoints(1).withExperience(5),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "1800",
            property: "elapsed_time",
        }, {
            comparator: "in",
            formula: "other",
            property: "type",
        }],
        false,
        [CardTag.multitasker]
    ),
    new Card(
        "Obstacle course",
        "",
        0,
        "obstacle",
        "Visit an obstacle course park or participate in a obstacle course race",
        Currencies.withPoints(1).withExperience(5),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "1800",
            property: "elapsed_time",
        }, {
            comparator: "in",
            formula: "other,bike",
            property: "type",
        }],
        false,
        [CardTag.multitasker]
    ),
    new Card(
        "Treadmill",
        "",
        0,
        "treadmill",
        "Do an activity on a treadmill",
        Currencies.withPoints(1).withExperience(2),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "1800",
            property: "elapsed_time",
        }, {
            comparator: "in",
            formula: "other,run",
            property: "type",
        }],
        false,
        [CardTag.multitasker]
    ),



    new Card(
        "Just a Workout",
        "",
        0,
        "workout_1",
        "Just a regular workout, run, ride or walk, no special tasks here",
        Currencies.withPoints(1).withExperience(0),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,walk,ride",
            property: "type",
        }],
        false,
        [CardTag.hardworker]
    ),
    new Card(
        "A bit longer Workout",
        "",
        0,
        "workout_2",
        "Just a regular workout, run, ride or walk, no special tasks here",
        Currencies.withPoints(1).withExperience(1),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance * 1.5",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,walk,ride",
            property: "type",
        }],
        false,
        [CardTag.hardworker]
    ),
    new Card(
        "Long Workout",
        "",
        0,
        "workout_3",
        "Just a regular workout, run, ride or walk, no special tasks here",
        Currencies.withPoints(1).withExperience(1),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance * 2",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,walk,ride",
            property: "type",
        }],
        false,
        [CardTag.hardworker]
    ),
    new Card(
        "Fast & Furious",
        "",
        0,
        "fast_1",
        "Just a regular run/ride, but you gotta pick up the pace",
        Currencies.withPoints(1).withExperience(1),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "average_speed * 1.05",
            property: "average_speed",
        }, {
            comparator: "in",
            formula: "run,ride",
            property: "type",
        }],
        false,
        [CardTag.hardworker]
    ),
    new Card(
        "2 Fast 2 Furious",
        "",
        0,
        "fast_2",
        "Just a regular run/ride, but you gotta pick up the pace",
        Currencies.withPoints(1).withExperience(2),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "average_speed * 1.1",
            property: "average_speed",
        }, {
            comparator: "in",
            formula: "run,ride",
            property: "type",
        }],
        false,
        [CardTag.hardworker]
    ),
    new Card(
        "3 Fast 3 Furious",
        "",
        0,
        "fast_3",
        "Just a regular run/ride, but you gotta pick up the pace",
        Currencies.withPoints(1).withExperience(3),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "average_speed * 1.15",
            property: "average_speed",
        }, {
            comparator: "in",
            formula: "run,ride",
            property: "type",
        }],
        false,
        [CardTag.hardworker]
    ),
    new Card(
        "4 Fast 4 Furious",
        "",
        0,
        "fast_4",
        "Just a regular run/ride, but you gotta pick up the pace",
        Currencies.withPoints(1).withExperience(4),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "average_speed * 1.2",
            property: "average_speed",
        }, {
            comparator: "in",
            formula: "run,ride",
            property: "type",
        }],
        false,
        [CardTag.hardworker]
    ),
    new Card(
        "5 Fast 5 Furious",
        "",
        0,
        "fast_5",
        "Just a regular run/ride, but you gotta pick up the pace",
        Currencies.withPoints(1).withExperience(5),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "average_speed * 1.25",
            property: "average_speed",
        }, {
            comparator: "in",
            formula: "run,ride",
            property: "type",
        }],
        false,
        [CardTag.hardworker]
    ),
    new Card(
        "Going far",
        "",
        0,
        "machine_1",
        "Record a long distance activity",
        Currencies.withPoints(1).withExperience(2),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance * 3",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,ride,walk",
            property: "type",
        }],
        false,
        [CardTag.hardworker]
    ),
    new Card(
        "Far from Home",
        "",
        0,
        "machine_2",
        "Record a long distance activity",
        Currencies.withPoints(1).withExperience(3),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance * 4",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,ride,walk",
            property: "type",
        }],
        false,
        [CardTag.hardworker]
    ),
    new Card(
        "Can't stop",
        "",
        0,
        "machine_3",
        "Record a long distance activity",
        Currencies.withPoints(1).withExperience(3),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance * 5",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,ride,walk",
            property: "type",
        }],
        false,
        [CardTag.hardworker]
    ),
    new Card(
        "Won't stop",
        "",
        0,
        "machine_4",
        "Record a long distance activity",
        Currencies.withPoints(1).withExperience(3),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance * 5",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,ride,walk",
            property: "type",
        }],
        false,
        [CardTag.hardworker]
    ),
    new Card(
        "I am Machine",
        "",
        0,
        "machine_5",
        "Record a long distance activity",
        Currencies.withPoints(1).withExperience(4),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance * 7",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,ride,walk",
            property: "type",
        }],
        false,
        [CardTag.hardworker]
    ),
    new Card(
        "Not Human Anymore",
        "",
        0,
        "machine_6",
        "Record a long distance activity",
        Currencies.withPoints(1).withExperience(4),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance * 8",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,ride,walk",
            property: "type",
        }],
        false,
        [CardTag.hardworker]
    ),
    new Card(
        "Unstoppable",
        "",
        0,
        "machine_7",
        "Record a long distance activity",
        Currencies.withPoints(1).withExperience(5),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance * 9",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,ride,walk",
            property: "type",
        }],
        false,
        [CardTag.hardworker]
    ),
    new Card(
        "Invincible",
        "",
        0,
        "machine_8",
        "Record a long distance activity",
        Currencies.withPoints(1).withExperience(5),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance * 10",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,ride,walk",
            property: "type",
        }],
        false,
        [CardTag.hardworker]
    ),
    new Card(
        "Where am I",
        "",
        0,
        "machine_9",
        "Record a long distance activity",
        Currencies.withPoints(1).withExperience(6),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance * 11",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,ride,walk",
            property: "type",
        }],
        false,
        [CardTag.hardworker]
    ),
    new Card(
        "Need Fuel",
        "",
        0,
        "machine_10",
        "Record a long distance activity",
        Currencies.withPoints(1).withExperience(6),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance * 12",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,ride,walk",
            property: "type",
        }],
        false,
        [CardTag.hardworker]
    ),

    new Card(
        "Environmentally Friendly",
        "",
        0,
        "bottle",
        "During your activity drop some bottles on deposit station",
        Currencies.withPoints(1).withExperience(12),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,ride,walk",
            property: "type",
        }],
        false,
        []
    ),
    new Card(
        "Autograph",
        "",
        0,
        "autograph",
        "During your activity draw your initials on a map with a GPS tracking line",
        Currencies.withPoints(1).withExperience(15),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,ride,walk",
            property: "type",
        }],
        false,
        []
    ),
    new Card(
        "Creeper",
        "",
        0,
        "creeper",
        "During your activity ask a stranger (that is doing the same activity as you, e.g. running) to take a selfie with you. Both of you must show a thumbs up",
        Currencies.withPoints(1).withExperience(12),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,ride,walk",
            property: "type",
        }],
        false,
        []
    ),
    new Card(
        "Team Up",
        "",
        0,
        "avengers",
        "Record an activity together with at least 3 other people that are also participating in Kurkudos",
        Currencies.withPoints(1).withExperience(15),
        1,
        0,
        {progression: 0,usesToProgress: 0},
        'null',
        Progression.NONE,
        [{
            comparator: "greater",
            formula: "distance",
            property: "distance",
        }, {
            comparator: "in",
            formula: "run,ride,walk",
            property: "type",
        }],
        false,
        []
    ),
];
